__author__ = 'Ткаченко Кирилл Павлович'


# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.

equation = 'y = -12x + 11111140.2121'
x = 2.5
# вычислите и выведите y


import re


# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом 
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
date = '01.11.1985'

# Примеры некорректных дат
date = '01.22.1001'
date = '1.12.1001'
date = '-2.10.3001'


def check_date(date_to_check):
    if not re.match(r'^(0[1-9]|[12][0-9]|3[01])\.(0[1-9]|1[0-2])\.\d{4}$', date_to_check):
        return 'Некорректный формат даты.'
    iday, imonth, iyear = [int(x) for x in date_to_check.split('.')]
    MONTHS = dict([(x, 31) if (x % 2 and x < 8) or (not x % 2 and x > 7) else (x, 30) for x in range(1, 13)])
    if iyear % 4:
        MONTHS[2] = 28
    else:
        MONTHS[2] = 29
    if iday > MONTHS[imonth] or iyear == 0:
        return 'Введена некорректная дата.'
    return iday, imonth, iyear


if __name__ == '__main__':
    print('*' * 70)
    print('Работаем с датами')
    input_date = input('Введите дату в формате dd.mm.yyyy: ')
    print(check_date(input_date))
    print('*' * 70)


# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты, 
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3

if __name__ == '__main__':
    print('*' * 70)
    print('Катаемся на лифте по Вавилонской башне')
    print('-' * 70)
    destination = int(input('Введите номер комнаты прибытия: '))
    block = 1
    while destination > sum([x**2 for x in range(block + 1)]):
        block += 1
    block_last_stage = sum(range(block + 1))
    to_last_room = sum([x**2 for x in range(1, block + 1)]) - destination
    stage = block_last_stage - to_last_room // block
    from_left = block - to_last_room % block
    print('Комната {0} находится на {1} этаже, {2}-ая слева'.format(destination, stage, from_left))
    print('*' * 70)
